import os
import socket
import logging
from dotenv import load_dotenv

print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ–±–ª–∞–∫–µ Render...")

load_dotenv()

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

class WakeBot:
    def __init__(self):
        self.token = os.getenv('BOT_TOKEN', '8313500508:AAG0SFdohCyrtWTvacjPZqECVZH1bbd4a5g')
        self.allowed_users = [int(x) for x in os.getenv('ALLOWED_USERS', '702965644').split(',')]
        self.mac = os.getenv('MAC_ADDRESS', '74-56-3C-AA-E7-9B')
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ –æ–±–ª–∞–∫–µ")

    def wake_pc(self):
        try:
            print(f"üì° –û—Ç–ø—Ä–∞–≤–∫–∞ WoL –ø–∞–∫–µ—Ç–∞ –Ω–∞ MAC: {self.mac}")
            mac_clean = self.mac.replace('-', '').replace(':', '')
            mac_bytes = bytes.fromhex(mac_clean)
            
            magic_packet = b'\xff' * 6 + mac_bytes * 16
            
            sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
            sock.sendto(magic_packet, ('255.255.255.255', 9))
            sock.close()
            
            print("‚úÖ WoL –ø–∞–∫–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–∑ –æ–±–ª–∞–∫–∞")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ WoL: {e}")
            return False

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        print(f"üë§ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        if user_id not in self.allowed_users:
            await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            return
            
        await update.message.reply_text(
            "ü§ñ –ë–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/wake - –í–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä —á–µ—Ä–µ–∑ WoL\n"
            "/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
            "/help - –ü–æ–º–æ—â—å"
        )

    async def wake(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        print(f"üë§ –ö–æ–º–∞–Ω–¥–∞ /wake –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        if user_id not in self.allowed_users:
            await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            return
            
        await update.message.reply_text("üñ•Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É Wake-on-LAN...")
        
        if self.wake_pc():
            await update.message.reply_text("‚úÖ –ö–æ–º–∞–Ω–¥–∞ WoL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ö–æ–º–ø—å—é—Ç–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 1-2 –º–∏–Ω—É—Ç—ã.")
        else:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã WoL")

    async def status(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        if user_id not in self.allowed_users:
            await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            return
            
        await update.message.reply_text(
            f"ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n"
            f"‚úÖ –ê–∫—Ç–∏–≤–µ–Ω\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {len(self.allowed_users)}\n"
            f"üì° MAC: {self.mac}"
        )

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        if user_id not in self.allowed_users:
            await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            return
            
        await update.message.reply_text(
            "üìñ –ü–æ–º–æ—â—å:\n\n"
            "/wake - –í–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä\n"
            "/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
            "/help - –°–ø—Ä–∞–≤–∫–∞"
        )

    def run(self):
        try:
            print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
            application = Application.builder().token(self.token).build()
            
            application.add_handler(CommandHandler("start", self.start))
            application.add_handler(CommandHandler("wake", self.wake))
            application.add_handler(CommandHandler("status", self.status))
            application.add_handler(CommandHandler("help", self.help))
            
            print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
            
            application.run_polling()
            
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    bot = WakeBot()
    bot.run()